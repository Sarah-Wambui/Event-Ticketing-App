{
  "openapi": "3.0.0",
  "info": {
    "title": "EventGo API",
    "version": "1.0.0",
    "description": "An API to handle user registration, authentication and Events CRUD."
  },
  "paths": {
    "/signup": {
      "post": {
        "summary": "User signup",
        "description": "Registers a new user.",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["username", "password", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "description": "Logs in a user and returns an access token.",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid login credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protected": {
      "get": {
        "summary": "Protected endpoint",
        "description": "Returns a message for valid tokens.",
        "tags": ["Protected"],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Get events",
        "description": "Returns a list of events.",
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new event",
        "description": "Creates a new event.",
        "tags": ["Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "venue": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "organizer": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "ticket_price": {
                    "type": "number",
                    "format": "float"
                  },
                  "available_tickets": {
                    "type": "integer"
                  },
                  "date_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "title",
                  "venue",
                  "description",
                  "organizer",
                  "category",
                  "image_url",
                  "ticket_price",
                  "available_tickets",
                  "date_time"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
  "get": {
    "summary": "Get event by ID",
    "description": "Returns an event by its ID.",
    "tags": ["Events"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "ID of the event to retrieve",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    }
  },
  "patch": {
    "summary": "Update event by ID",
    "description": "Updates an event by its ID.",
    "tags": ["Events"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "ID of the event to update",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "venue": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "organizer": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "ticket_price": {
                "type": "number",
                "format": "float"
              },
              "available_tickets": {
                "type": "integer"
              },
              "date_time": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Event updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    }
  },
  "delete": {
    "summary": "Delete event by ID",
    "description": "Deletes an event by its ID.",
    "tags": ["Events"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "ID of the event to delete",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Event deleted successfully"
      }
    }
  }
},


    "/payments": {
      "get": {
        "summary": "Get payments",
        "description": "Returns a list of payments.",
        "tags": ["Payments"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new payment",
        "description": "Creates a new payment.",
        "tags": ["Payments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "ticket_id": {
                    "type": "integer"
                  }
                },
                "required": ["amount", "ticket_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    }







  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
